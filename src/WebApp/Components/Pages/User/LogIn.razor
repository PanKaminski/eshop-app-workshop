@page "/user/login"

@attribute [Authorize]

@inject NavigationManager Nav

@code {
    [SupplyParameterFromQuery]
    public string? ReturnUrl { get; set; }

    protected override void OnInitialized()
    {
        var returnUrl = ReturnUrl ?? "/";
        var url = new Uri(returnUrl, UriKind.RelativeOrAbsolute);
        Nav.NavigateTo(url.IsAbsoluteUri ? "/" : returnUrl);
    }

    public static string Url(NavigationManager nav, bool preserveQuery = true)
    {
        var currentUri = nav.Uri;
        if (!preserveQuery)
        {
            currentUri = new Uri(currentUri).GetComponents(UriComponents.SchemeAndServer | UriComponents.Path, UriFormat.SafeUnescaped);
        }
        return $"user/login?returnUrl={Uri.EscapeDataString(nav.ToBaseRelativePath(currentUri))}";
    }
}
